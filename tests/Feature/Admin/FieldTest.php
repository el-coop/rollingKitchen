<?php

namespace Tests\Feature\Admin;

use App\Models\Admin;
use App\Models\Field;
use App\Models\Kitchen;
use App\Models\User;
use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;

class FieldTest extends TestCase {
	use RefreshDatabase;
	protected $admin;
	
	protected function setUp() {
		parent::setUp(); // TODO: Change the autogenerated stub
		factory(Admin::class)->create()->each(function ($admin) {
			$user = factory(User::class)->make();
			$admin->user()->save($user);
		});
		$this->admin = User::find(1);
	}
	
	public function test_create_field() {
		$this->actingAs($this->admin)->post(action('Admin\FieldController@create'), [
			'name' => 'test',
			'type' => 'text',
			'form' => Kitchen::class,
			'name_nl' => 'name'
		]);
		$this->assertDatabaseHas('fields', ['name' => 'test', 'type' => 'text']);
	}
	
	public function test_delete_field() {
		$field = factory(Field::class)->create();
		$this->assertDatabaseHas('fields', ['name' => $field->name, 'type' => $field->type, 'form' => Kitchen::class]);
		$this->actingAs($this->admin)->delete(action('Admin\FieldController@delete', $field));
		$this->assertDatabaseMissing('fields', ['name' => $field->name, 'type' => $field->type]);
	}
	
	public function test_edit_field() {
		$field = factory(Field::class)->create();
		$this->assertDatabaseHas('fields', ['name' => $field->name, 'type' => $field->type]);
		$this->actingAs($this->admin)->patch(action('Admin\FieldController@edit', $field), ['name' => 'new name', 'type' => 'text']);
		$this->assertDatabaseMissing('fields', ['name' => $field->name, 'type' => $field->type]);
		$this->assertDatabaseHas('fields', ['name' => 'new name', 'type' => 'text']);
	}
}