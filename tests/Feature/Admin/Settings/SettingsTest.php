<?php

namespace Tests\Feature\Admin\Settings;

use App\Models\Admin;
use App\Models\Kitchen;
use App\Models\Setting;
use App\Models\User;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class SettingsTest extends TestCase {

    use RefreshDatabase;
    use WithFaker;
    protected $admin;
    protected $kitchen;

    protected function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->admin = factory(Admin::class)->create();
        $this->admin->user()->save(factory(User::class)->make());
        $this->kitchen = factory(Kitchen::class)->create();
        $this->kitchen->user()->save(factory(User::class)->make());
    }

    public function test_guest_cant_see_page() {
        $this->get(action('Admin\SettingsController@show'))->assertRedirect(action('Auth\LoginController@login'));
    }

    public function test_kitchen_cant_see_page() {
        $this->actingAs($this->kitchen->user)->get(action('Admin\SettingsController@show'))->assertForbidden();
    }

    public function test_admin_can_see_page() {
        $this->actingAs($this->admin->user)->get(action('Admin\SettingsController@show'))
            ->assertStatus(200)
            ->assertSee(__('admin/settings.accountant'));
    }

    public function test_guest_cant_update_settings() {
        $this->patch(action('Admin\SettingsController@update'), [
            'accountant' => 'test@test.com',
            'application_text_en' => 'test',
            'application_text_nl' => 'testtest',
            'registration_text_en' => 'regtest',
            'registration_text_nl' => 'regtestnl',
            'login_text_en' => 'logintest',
            'login_text_nl' => 'logintestnl'
        ])->assertRedirect(action('Auth\LoginController@login'));
    }

    public function test_kitchen_cant_update_settings() {
        $this->actingAs($this->kitchen->user)->patch(action('Admin\SettingsController@update'), [
            'accountant' => 'test@test.com',
            'application_text_en' => 'test',
            'application_text_nl' => 'testtest',
            'registration_text_en' => 'regtest',
            'registration_text_nl' => 'regtestnl',
            'login_text_en' => 'logintest',
            'login_text_nl' => 'logintestnl'
        ])->assertForbidden();
    }

    public function test_admin_can_update_settings() {
        $this->actingAs($this->admin->user)->patch(action('Admin\SettingsController@update'), [
            'accountant' => 'test@test.com',
            'application_text_en' => 'test',
            'application_text_nl' => 'testtest',
            'registration_text_en' => 'regtest',
            'registration_text_nl' => 'regtestnl',
            'login_text_en' => 'logintest',
            'login_text_nl' => 'logintestnl'
        ])->assertSuccessful();
    }
}
