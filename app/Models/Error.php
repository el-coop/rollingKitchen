<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Error extends Model {

	public function error() {
		return $this->morphTo();
	}

	public function getFullDataAttribute(){
		$fullData = collect([
			[
				'name' => 'page',
				'label' => __('developer\errors.page'),
				'type' => strlen($this->page) < 25 ? 'text' : 'textarea',
				'value' => $this->page,
				'readonly' => true
			],
			[
				'name' => 'error_type',
				'label' => __('developer\errors.error_type'),
				'type' => 'text',
				'value' => $this->error_type,
				'readonly' => true

			],
			[
				'name' => 'message',
				'label' => __('developer\errors.message'),
				'type' => strlen($this->error->message) < 25 ? 'text' : 'textarea',
				'value' => $this->error->message,
				'readonly' => true

			],
			[
				'name' => 'exception',
				'label' => __('developer\errors.exception'),
				'type' => 'json',
				'value' => $this->error->exception,

			]

		]);
		if ($this->error_type == PhpError::class){
			$fullData->push([
				'name' => 'request',
				'label' => __('developer\errors.request'),
				'type' => 'json',
				'value' => $this->error->request,

			]);
		} else {
			$fullData->push([
				'name' => 'user_agent',
				'label' => __('developer\errors.user_agent'),
				'type' => 'text',
				'value' => $this->error->user_agent,

			]);
			$fullData->push([
				'name' => 'vm',
				'label' => __('developer\errors.vm'),
				'type' => 'json',
				'value' => $this->error->vm,
			]);
		}
		return $fullData;
	}

	protected static function boot() {
		parent::boot(); // TODO: Change the autogenerated stub
		self::deleting(function($error){
			$error->error()->delete();
		});
	}
}
