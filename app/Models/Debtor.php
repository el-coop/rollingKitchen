<?php

namespace App\Models;

use App\Models\Traits\HasFields;
use Illuminate\Database\Eloquent\Model;

class Debtor extends Model {
	use HasFields;


	protected static function boot() {
		parent::boot(); // TODO: Change the autogenerated stub
		static::deleting(function($debtor){
			if ($debtor->has('invoices')) {
				$deletedOwner = DeletedInvoiceOwner::firstOrCreate([
					'name' => $debtor->name,
					'email' => $debtor->email,
					'language' => $debtor->language
				]);
				$debtor->invoices->each(function ($invoice) use ($deletedOwner) {
					$deletedOwner->invoices()->save($invoice);
			});
			}
		});
	}
	static $fieldClass = Kitchen::class;

	protected $casts = [
		'data' => 'array'
	];

	static function indexPage() {
		return action('Admin\DebtorController@index', [], false);
	}

	public function getFullDataAttribute() {
		$fullData = collect([
			[
				'name' => 'name',
				'label' => __('global.name'),
				'type' => 'text',
				'value' => $this->name
			], [
				'name' => 'email',
				'label' => __('global.email'),
				'type' => 'text',
				'value' => $this->email
			], [
				'name' => 'language',
				'label' => __('global.language'),
				'type' => 'select',
				'options' => [
					'en' => __('global.en'),
					'nl' => __('global.nl'),
				],
				'value' => $this->language
			]
		]);

		return $fullData->concat($this->getFieldsData());
	}

	public function invoices() {
		return $this->morphMany(Invoice::class, 'owner');
	}

}
